openapi: 3.0.0
info:
  title: Blog API
  version: 0.0.1
paths:
  /blog:
    get:
      summary: Get all blogs
      description: Retrieves all blogs
      responses:
        "200":
          $ref: "#/components/requestBodies/BlogsResponse"
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${blogHandlerARN}/invocations"
        type: "aws_proxy"

    post:
      summary: Create specific blog
      requestBody:
        $ref: "#/components/requestBodies/Blog"
      responses:
        "200":
          $ref: "#/components/requestBodies/BlogCreated"
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${blogHandlerARN}/invocations"
        type: "aws_proxy"

  /blog/{id}:
    get:
      summary: Get specific blog
      description: Get specific blog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          $ref: "#/components/requestBodies/BlogsResponse"
      x-amazon-apigateway-integration:
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/${blogHandlerARN}/invocations"
        type: "aws_proxy"

components:
  schemas:
    Blog:
      type: object
      properties:
        id:
          type: string
          example: 49af1141-d93d-4231-bbc0-7c400dfe445c
        title:
          type: string
          example: My title
        blogBody:
          type: string
        timestamp:
          type: integer
          description: Unix seconds
    BlogCreated:
      type: object
      properties:
        message:
          type: string
          example: "Blog has successfully been created"
        blogId:
          type: string
          format: uuid
  requestBodies:
    Blog:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Blog"
    BlogsResponse:
      description: "OK"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Blog"
    BlogCreated:
      description: "Blog Created"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BlogCreated"
